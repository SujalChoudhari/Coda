scope Maths{
    const double PI = 3.14159_26535;
    const double E =  2.71828_18284;

    def add(first, second) {
        return native Maths coda_add(first, second);
    }

    def sub(first, second) {
        return native Maths coda_sub(first, second);
    }

    def mul(first, second) {
        return native Maths coda_mul(first, second);
    }

    def div(first, second) {
        return native Maths coda_div(first, second);
    }

    def pow(base, exponent) {
        first = base;
        second = exponent;
        return native Maths coda_pow(first, second);
    }

    def sqrt(number) {
        return native Maths squareRoot(number);
    }

    def ln(value) {
        return native Maths naturalLog(value);
    }

    def log10(value) {
        return native Maths base10Log(value);
    }

    def exp(exponent) {
        return native Maths exponential(exponent);
    }

    def abs(number) {
        return native Maths absoluteValue(number);
    }

    def round(number) {
        return native Maths roundToNearest(number);
    }

    def sin(angle) {
        return native Maths coda_sin(angle);
    }

    def cos(angle) {
        return native Maths coda_cos(angle);
    }

    def tan(angle) {
        return native Maths coda_tan(angle);
    }

    def asin(value) {
        return native Maths coda_asin(value);
    }

    def acos(value) {
        return native Maths coda_acos(value);
    }

    def atan(value) {
        return native Maths coda_atan(value);
    }

    def sec(angle) {
        return native Maths coda_sec(angle);
    }

    def csc(angle) {
        return native Maths coda_csc(angle);
    }

    def cot(angle) {
        return native Maths coda_cot(angle);
    }

    def sinh(angle) {
        return native Maths coda_sinh(angle);
    }

    def cosh(angle) {
        return native Maths coda_cosh(angle);
    }

    def tanh(angle) {
        return native Maths coda_tanh(angle);
    }
}